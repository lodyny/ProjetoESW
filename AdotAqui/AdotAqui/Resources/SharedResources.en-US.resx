<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_BirthdateNewInvalid" xml:space="preserve">
    <value>Only users with more than 10 years olds are allowed.</value>
  </data>
  <data name="Error_BirthdateOldInvalid" xml:space="preserve">
    <value>Only dates after 1900 are valid.</value>
  </data>
  <data name="Error_BirthdateRequired" xml:space="preserve">
    <value>Birthday field required.</value>
  </data>
  <data name="Error_ConfirmPasswordRequired" xml:space="preserve">
    <value>Confirm password field required.</value>
  </data>
  <data name="Error_EmailInvalid" xml:space="preserve">
    <value>Valid e-mail format necessary. Ex: mail@mail.com</value>
  </data>
  <data name="Error_EmailRequired" xml:space="preserve">
    <value>E-mail field required.</value>
  </data>
  <data name="Error_LowerRequired" xml:space="preserve">
    <value>Atleast one lower letter is required (a-z).</value>
  </data>
  <data name="Error_NameRequired" xml:space="preserve">
    <value>Name field required.</value>
  </data>
  <data name="Error_NonAlphaNumericRequired" xml:space="preserve">
    <value>Atleast one alphanumeric caracter is required.</value>
  </data>
  <data name="Error_NumberRequired" xml:space="preserve">
    <value>Atleast one number is required (0-9).</value>
  </data>
  <data name="Error_PasswordInvalid" xml:space="preserve">
    <value>Password does no meet the criteria. Ex: Password2!</value>
  </data>
  <data name="Error_PasswordMismatch" xml:space="preserve">
    <value>Password and Confirm password mismatch.</value>
  </data>
  <data name="Error_PasswordRequired" xml:space="preserve">
    <value>Password field required.</value>
  </data>
  <data name="Error_UpperRequired" xml:space="preserve">
    <value>Atleast one upper letter is required (A-Z).</value>
  </data>
  <data name="Label_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Label_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Label_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Label_Birthday" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="Label_Phone" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Label_ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Label_RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Label_SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="Label_SignOut" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="Label_Admin" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="Label_Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Label_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Label_NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Label_NewConfirmationPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="Error_NameLengthInvalid" xml:space="preserve">
    <value>Name need atleast 3 characters.</value>
  </data>
  <data name="Label_SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Label_SaveChanges" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="Label_ResendMail" xml:space="preserve">
    <value>Resend confirmation e-mail</value>
  </data>
  <data name="Label_ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Error_PhoneInvalid" xml:space="preserve">
    <value>A phone number is composed by 9 digits.</value>
  </data>
  <data name="User_Ban" xml:space="preserve">
    <value>Banned</value>
  </data>
  <data name="User_Birthday" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="User_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="User_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="User_Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Label_AccStatus" xml:space="preserve">
    <value>Account Status</value>
  </data>
  <data name="Label_Ban" xml:space="preserve">
    <value>Ban</value>
  </data>
  <data name="Label_Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Label_EmailValidated" xml:space="preserve">
    <value>Email Confirmed</value>
  </data>
  <data name="Label_Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Label_Unban" xml:space="preserve">
    <value>Unban</value>
  </data>
  <data name="User_AccStatusBan" xml:space="preserve">
    <value>Banned</value>
  </data>
  <data name="User_AccStatusUnban" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Email_ActivateAcc" xml:space="preserve">
    <value>Activate Account</value>
  </data>
  <data name="Email_Farewell" xml:space="preserve">
    <value>If you don't have acknowledge of this email please ignore it.</value>
  </data>
  <data name="Email_Greeting" xml:space="preserve">
    <value>Hey</value>
  </data>
  <data name="Email_Header" xml:space="preserve">
    <value>Account confirmation</value>
  </data>
  <data name="Email_Welcome" xml:space="preserve">
    <value>Welcome to AdotAqui. To finish your account registration please access though the link available below:</value>
  </data>
  <data name="Label_ConfirmedEmailLogin" xml:space="preserve">
    <value>You can login here.</value>
  </data>
  <data name="Label_ConfirmedEmailTitle" xml:space="preserve">
    <value>Email Confirmation</value>
  </data>
  <data name="Label_ConfirmedEmailWelcome" xml:space="preserve">
    <value>Welcome to AdotAqui!</value>
  </data>
  <data name="Label_EmailSent" xml:space="preserve">
    <value>Confirmation Email Sent</value>
  </data>
  <data name="Label_EmailSentCheck" xml:space="preserve">
    <value>Please check your email in a moment, there will be a email to activate your account!</value>
  </data>
  <data name="Error_PasswordLengthInvalid" xml:space="preserve">
    <value>Password needs atleast 6 caracters is required.</value>
  </data>
  <data name="Label_Recover" xml:space="preserve">
    <value>Recover</value>
  </data>
  <data name="Label_Species" xml:space="preserve">
    <value>Species</value>
  </data>
  <data name="Label_Breed" xml:space="preserve">
    <value>Breed</value>
  </data>
  <data name="Label_Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Label_Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Label_Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="Label_ChooseSpecies" xml:space="preserve">
    <value>Choose species</value>
  </data>
  <data name="Label_ChooseBreed" xml:space="preserve">
    <value>Choose breed</value>
  </data>
  <data name="Label_AnimalName" xml:space="preserve">
    <value>Animal Name</value>
  </data>
  <data name="Label_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Label_ChooseFile" xml:space="preserve">
    <value>Choose File</value>
  </data>
</root>